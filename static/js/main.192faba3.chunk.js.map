{"version":3,"sources":["components/Navbar.tsx","components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","isActive","classNames","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleTable","people","slug","findRelative","relativesName","relative","find","person","name","sex","map","born","died","motherName","fatherName","PeoplePage","useParams","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","fetchPeople","useEffect","length","NotFoundPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.192faba3.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => classNames('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => classNames('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  people: Person[],\n  slug: string,\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people, slug }) => {\n  const findRelative = (relativesName: string | null) => {\n    const relative = people.find(person => person.name === relativesName);\n\n    if (relative) {\n      return (\n        <Link\n          to={`/people/${relative.slug}`}\n          className={classNames(\n            { 'has-text-danger': relative.sex === 'f' },\n          )}\n        >\n          {relative.name}\n        </Link>\n      );\n    }\n\n    return relativesName || '-';\n  };\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map(person => (\n              <tr\n                data-cy=\"person\"\n                className={classNames(\n                  { 'has-background-warning': slug === person.slug },\n                )}\n              >\n                <td>\n                  <Link\n                    to={`/people/${person.slug}`}\n                    className={classNames(\n                      { 'has-text-danger': person.sex === 'f' },\n                    )}\n                  >\n                    {person.name}\n                  </Link>\n                </td>\n\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n                <td>{findRelative(person.motherName)}</td>\n                <td>{findRelative(person.fatherName)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const { slug = '' } = useParams();\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const fetchPeople = async () => {\n    try {\n      setIsLoading(true);\n      setPeople(await getPeople());\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {hasError && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n\n      {!isLoading && !people.length && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      {isLoading\n        ? <Loader />\n        : (\n          <PeopleTable\n            people={people}\n            slug={slug}\n          />\n        )}\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}